package lesson8;

/*
* Non-access модификаторы : final, static, abstract
*
* FINAL
* может относиться к переменной(делает из неё константу)
* к методам и классам тоже может
*
* final переменная должна быть иниализирована до использования:
* 1. при определении переменной
* 2.в каждом конструкторе (если переменная не static)
* */
public class Non_access_modifiers {

    public int a = 10;
    public final int b = 15;
    public final int i; //такого не может быть - должно быть присвоено значение константе. дефолтного значения нет
    // можно использовать такую запись но нужно будет определить перем. внутри каждого конструктора

    Non_access_modifiers(){
        i = 10;
    }
    // есть момент что внутри разных конструкторов константа может принимать разные значения. но она будет неизменна
    Non_access_modifiers(boolean b){
        i = 16;
    }

    public void abc(final short s){ //также можно использовать внутри параметра - нельзя будет изменить перем. в методе
        // можно также использовать константы внутри метода. и можно присваивать им значения после инициализации(что невозможно в классе)
        final byte b;
        b = 10;
        System.out.println(s + b);
    }

    public static void main(String[] args) {

        Non_access_modifiers nam = new Non_access_modifiers();
        nam.a *=2;
        System.out.println(nam.a);

        //nam.b *= 2; сделать так нельзя, будет ошибка, поскольку переменная константа
        //System.out.println(nam.b);
    }
}


