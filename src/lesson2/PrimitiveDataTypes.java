
package lesson2;


public class PrimitiveDataTypes {
    //переменные
    //разновидности еды - типы данных, контейнеры - переменные
    //составные части переменной -тип.размер.имя.значение
    //типы данных - простые и ссылочные типы
    //простые типы - численные(целые(byte,short,int,long) и дробные(float,double)).символьные(char).логические(booleen)
    public static void main(String[] args){
    
        byte b1 = 10;
        byte b2 = 20;
        // ошибка компиляции выходит за пределы интервала byte b3 = 1000;
        
        short s1 = 5;
        short s2 = -4;
        
        int i1 = 500;
        
        long l1 = 1000;
        long l2 = 1000000000000L;
        
        float f1 = 3.14f;
        float f2 = 2.5F;
        float f3 = 20;
        
        double d1 = 5.5d;
        double d2 = 4.23;
        
        char c1 = 'a';
        char c2 = 'A';
        char c3 = '1';
        char c4 = 300; //выводит 300-ый символ из unicode в десятиричной системе
        char c5 = '\u1234'; // выводит символ из юникода по его коду в 16-тиричной системе
        
        boolean bool1 = true;
        
        
        System.out.println(b1);
        System.out.println(c4);
        System.out.println(c5);
        System.out.println(bool1);
        
        //системы исчесления - двоичная, десятиричная, восьмиричная, шестнадцатиричная
        
        int a1 = 60;
        int a2 = 0B111100; //0В или 0b означает что мы обращаемся к двоичной системе
        
        int a3 = 074; // в восьмиричной системе исчиления (в начале идёт 0)
        
        int a4 = 0X3C; // 0X или 0x - вывод в шестнадцатиричной системе 
        
        System.out.println(a1);
        
        // запись с символом '_' для удобства чтения
        // НЕЛЬЗЯ использовать вначале и конце числа, до и после точки в дробных числах, до и после указателя типа данных (L,l,D,d,F,f)
        // нельзя использовать до,между и после 0X, OB;
        // но можно использовать после нуля в восьмиричной системе исчесления
        
        int a5 = 1_000_000_000;
        
        
    }
}
