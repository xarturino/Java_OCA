package lesson9;

/*
* Разновидности переменных и их пределы видимости
*
* Переменные делятся на 4 группы видимости
*
* 1. Local variable - переменные созданные внутри метода. область видимости - интервал кода - создание перем и конец там где закончился блок кода
* 2. Parameter - область видимости параметра это вся область метода
* 3. Instance variable - переменные принадлежат объекту. используются и внутри класса и внутри объекта. как примитивные так и референс
* 4. Static variable - принадлежит всему классу. общая для всех объектов. можно использовать где угодно. Виден везде в рамках класса.
*
* Локальные переменные носят промежуточный характер. не имеют модификаторов доступа. у них не бывает дефолтного значения.
*
*  ///////////////THIS
    //при использовании с переменными и методами указывает на текущий объект класса
    // нельзя использовать для обращения к переменным и методам внутри статического метода или при присваивании значения статической перемен.
    // не является ошибочным обращение к статик элементом через this (пример в конструкторе)
    *
    *
    *  Идентификаторы в JAVA
    * 1. длина не ограничена - int aaaaaaaaaaaaaaaaaaaaaaaaa = 0;
    * 2. должен начинатся с прописной или заглавной, с символов валют или _
    * 3. символы валют или _ могут быть в любой части идентификатора, а цифры везде, кроме начала
    * 4. нельзя называть идентификаторы зарезервированными словами
    *
* */

public class Car {

    String color; // пример Instance variable
    String engine;
    int a = 10;
    static int count; // пример Static variable
    //static int count = this.a; -невозможно такое использование. т.к. статическая переменная может быть использована
    // ещё до создания объекта к которому будет относится переменная А
    // аналогично это будет работать и в статик методах

    Car(String color, String engine){ //зона видимости параметра и объектной перем могут совпадать, НО тогда есть правило
        this.count++;
        this.color = color; // this.color принадлежит объекту, а без this принадлежит параметру
        this.engine = engine;
    }
    // THIS когда используется с перем и методами означает принадлежность к текущему объекту.

    public void showColor(){
        System.out.println("Color is: " + color);
        this.changeColor("Red"); //THIS показывает принадлежность к текущему объекту.
    }

    public void changeColor(String color3){ //параметр color3 можно использовать везде в методе
        System.out.println("Color is change");
        int price = 5000; // локальная переменная
        color = color3;
        price +=1000;
    }


}

